DROP TABLE INSTALLATION;
DROP TABLE FRAGMENT;
DROP TABLE DBCHANGE;
DROP TABLE ENVIRONMENT_USER;
DROP TABLE ENVIRONMENT;
DROP SEQUENCE ENVIRONMENT_SEQ;
DROP SEQUENCE DBCHANGE_SEQ;
DROP SEQUENCE FRAGMENT_SEQ;
DROP SEQUENCE ENVUSER_SEQ;
DROP SEQUENCE INSTALLATION_SEQ;

CREATE TABLE ENVIRONMENT
(
	ID INT NOT NULL,
	CODE VARCHAR2(20) NOT NULL,
  NAME VARCHAR2(100),
  DESCRIPTION VARCHAR2(200),
	VERSION VARCHAR2(20) NOT NULL,
	PRIMARY KEY (ID)
);


CREATE SEQUENCE ENVIRONMENT_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1 NOCACHE;

CREATE OR REPLACE TRIGGER "ENVIRONMENT_sequence_insert"
BEFORE INSERT ON ENVIRONMENT
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT ENVIRONMENT_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE TABLE ENVIRONMENT_USER
(
	ID INT NOT NULL,
  ENVIRONMENT_ID INT NOT NULL,
  NAME VARCHAR2(100),
	PRIMARY KEY (ID)
);

CREATE SEQUENCE ENVUSER_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1 NOCACHE;

CREATE OR REPLACE TRIGGER "ENVUSER_SEQ_sequence_insert"
BEFORE INSERT ON ENVIRONMENT_USER
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT ENVUSER_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE TABLE DBCHANGE
(
	ID INT NOT NULL,
	CODE VARCHAR2(20) NOT NULL,
	DESCRIPTION VARCHAR2(200),
	PRIMARY KEY (ID),
	CONSTRAINT DBCHANGE_UNIQUE UNIQUE (CODE)
);

CREATE SEQUENCE DBCHANGE_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1 NOCACHE;

CREATE OR REPLACE TRIGGER "DBCHANGE_sequence_insert"
BEFORE INSERT ON DBCHANGE
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCHANGE_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE TABLE FRAGMENT
(
	ID INT NOT NULL,
	DBCHANGE_ID INT NOT NULL,
	GROUPNAME VARCHAR2(200) NOT NULL,
	IS_MANUAL SMALLINT NOT NULL,
	TEMPLATECONTENT CLOB NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FRAGMENT_UNIQUE UNIQUE (DBCHANGE_ID, GROUPNAME)
);

CREATE SEQUENCE FRAGMENT_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1 NOCACHE;

CREATE OR REPLACE TRIGGER "FRAGMENT_sequence_insert"
BEFORE INSERT ON FRAGMENT
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT FRAGMENT_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

ALTER TABLE FRAGMENT
	ADD CONSTRAINT FK_FRAGMENT_DBCHID FOREIGN KEY (DBCHANGE_ID)
	REFERENCES DBCHANGE (ID)
	DEFERRABLE INITIALLY DEFERRED
;

CREATE TABLE INSTALLATION
(
  ID INT NOT NULL,
  FRAGMENT_ID INT NOT NULL,
  USER_ID INT NOT NULL,
  DONE_AT TIMESTAMP NOT NULL,
  DONE_BY INT NOT NULL,
  CONTENT CLOB
);

CREATE SEQUENCE INSTALLATION_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1 NOCACHE;

CREATE OR REPLACE TRIGGER "INSTALLATION_sequence_insert"
BEFORE INSERT ON INSTALLATION
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT INSTALLATION_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

ALTER TABLE INSTALLATION
	ADD CONSTRAINT FK_INSTALLATION_FRGID FOREIGN KEY (FRAGMENT_ID)
	REFERENCES FRAGMENT (ID)
	DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE INSTALLATION
	ADD CONSTRAINT FK_INSTALLATION_USERID FOREIGN KEY (USER_ID)
	REFERENCES ENVIRONMENT_USER (ID)
	DEFERRABLE INITIALLY DEFERRED
;

/*CREATE TABLE REQUIREMENT
(
  ID INT NOT NULL,
  DBCHANGE_ID INT NOT NULL,
  REQUIRED_DBCHANGE INT NOT NULL
);

ALTER TABLE REQUIREMENT
	ADD CONSTRAINT FK_REQUIREMENT_DBCHID FOREIGN KEY (DBCHANGE_ID)
	REFERENCES DBCHANGE (ID)
	DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE REQUIREMENT
	ADD CONSTRAINT FK_REQUIREMENT_REQDBCHID FOREIGN KEY (REQUIRED_DBCHANGE)
	REFERENCES DBCHANGE (ID)
	DEFERRABLE INITIALLY DEFERRED
;

CREATE TABLE FRAGMENT_HISTORY
(
  ID INT NOT NULL,
  FRAGMENT_ID INT NOT NULL,
  UPDATED_AT TIMESTAMP NOT NULL,
  UPDATED_BY INT NOT NULL,
  CONTENT CLOB
);

ALTER TABLE FRAGMENT_HISTORY
	ADD CONSTRAINT FK_FRAGMENT_HISTORY_FRID FOREIGN KEY (FRAGMENT_ID)
	REFERENCES FRAGMENT (ID)
	DEFERRABLE INITIALLY DEFERRED
;


CREATE TABLE INSTALLED_DBCHANGE
(
  ID INT NOT NULL,
  ENVIRONMENT_ID INT NOT NULL,
  DBCHANGE_ID INT NOT NULL,
  DONE_AT TIMESTAMP NOT NULL
);

ALTER TABLE INSTALLED_DBCHANGE
	ADD CONSTRAINT FK_INDBCH_ENVID FOREIGN KEY (ENVIRONMENT_ID)
	REFERENCES ENVIRONMENT (ID)
	DEFERRABLE INITIALLY DEFERRED
;

ALTER TABLE INSTALLED_DBCHANGE
	ADD CONSTRAINT FK_INDBCH_DBCHID FOREIGN KEY (DBCHANGE_ID)
	REFERENCES DBCHANGE (ID)
	DEFERRABLE INITIALLY DEFERRED
;

CREATE OR REPLACE TRIGGER "INDBCH_sequence_insert"
BEFORE INSERT ON INSTALLED_DBCHANGE
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCHANGE_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/
*/