
/* Drop Tables */

DROP TABLE DBCH_INSTALLATION CASCADE CONSTRAINTS;
DROP TABLE DBCH_FRAGMENT CASCADE CONSTRAINTS;
DROP TABLE DBCH_REQUIREMENT CASCADE CONSTRAINTS;
DROP TABLE DBCH_DBCHANGE CASCADE CONSTRAINTS;
DROP TABLE DBCH_USERGROUP CASCADE CONSTRAINTS;
DROP TABLE DBCH_ENVIRONMENT CASCADE CONSTRAINTS;
DROP TABLE DBCH_GROUP CASCADE CONSTRAINTS;
DROP TABLE DBCH_USER CASCADE CONSTRAINTS;



/* Drop Sequences */

DROP SEQUENCE DBCH_DBCH_SEQ;
DROP SEQUENCE DBCH_ENV_SEQ;
DROP SEQUENCE DBCH_FRAG_SEQ;
DROP SEQUENCE DBCH_G_SEQ;
DROP SEQUENCE DBCH_INST_SEQ;
DROP SEQUENCE DBCH_REQ_SEQ;
DROP SEQUENCE DBCH_UG_SEQ;
DROP SEQUENCE DBCH_USER_SEQ;




/* Create Sequences */

CREATE SEQUENCE DBCH_DBCH_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_ENV_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_FRAG_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_G_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_INST_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_REQ_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_UG_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;
CREATE SEQUENCE DBCH_USER_SEQ INCREMENT BY 1 MINVALUE 0 MAXVALUE 10000000 START WITH 1;



/* Create Tables */

CREATE TABLE DBCH_DBCHANGE
(
	ID number(10) NOT NULL,
	CODE varchar2(20) NOT NULL UNIQUE,
	DESCRIPTION varchar2(200),
	PRIMARY KEY (ID)
);


CREATE TABLE DBCH_ENVIRONMENT
(
	ID number(10) NOT NULL,
	CODE varchar2(20) NOT NULL UNIQUE,
	NAME varchar2(100),
	DESCRIPTION varchar2(200),
	VERSION varchar2(20),
	PRIMARY KEY (ID)
);


CREATE TABLE DBCH_FRAGMENT
(
	ID number(10) NOT NULL,
	DBCHANGE_ID number(10) NOT NULL,
	GROUP_ID number(10) NOT NULL,
	TEMPLATECONTENT clob NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FRAGMENT_U UNIQUE (DBCHANGE_ID, GROUP_ID)
);


CREATE TABLE DBCH_GROUP
(
	ID number(10) NOT NULL,
	NAME varchar2(100) NOT NULL UNIQUE,
	IS_MANUAL number(1) NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE DBCH_INSTALLATION
(
	ID number(10) NOT NULL,
	FRAGMENT_ID number(10) NOT NULL,
	USERGROUP_ID number(10) NOT NULL,
	DONE_AT timestamp NOT NULL,
	CONTENT clob NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE DBCH_REQUIREMENT
(
	ID number(10) NOT NULL,
	DBCHANGE_ID number(10) NOT NULL,
	REQUIRED_DBCHANGE_ID number(10) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT REQUIREMENT_U UNIQUE (DBCHANGE_ID, REQUIRED_DBCHANGE_ID)
);


CREATE TABLE DBCH_USER
(
	ID number(10) NOT NULL,
	NAME varchar2(100) NOT NULL UNIQUE,
	PRIMARY KEY (ID)
);


CREATE TABLE DBCH_USERGROUP
(
	ID number(10) NOT NULL,
	GROUP_ID number(10) NOT NULL,
	USER_ID number(10) NOT NULL,
	ENVIRONMENT_ID number(10) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT ENVUSERGROUP_U UNIQUE (GROUP_ID, USER_ID, ENVIRONMENT_ID)
);



/* Create Foreign Keys */

ALTER TABLE DBCH_FRAGMENT
	ADD CONSTRAINT FK_DBCH_FRAG_DBCH FOREIGN KEY (DBCHANGE_ID)
	REFERENCES DBCH_DBCHANGE (ID)
;


ALTER TABLE DBCH_REQUIREMENT
	ADD CONSTRAINT FK_DBCH_REQ_REQDBCH FOREIGN KEY (DBCHANGE_ID)
	REFERENCES DBCH_DBCHANGE (ID)
;


ALTER TABLE DBCH_REQUIREMENT
	ADD CONSTRAINT FK_DBCH_REQ_DBCH FOREIGN KEY (REQUIRED_DBCHANGE_ID)
	REFERENCES DBCH_DBCHANGE (ID)
;


ALTER TABLE DBCH_USERGROUP
	ADD CONSTRAINT FK_DBCH_UG_E FOREIGN KEY (ENVIRONMENT_ID)
	REFERENCES DBCH_ENVIRONMENT (ID)
;


ALTER TABLE DBCH_INSTALLATION
	ADD CONSTRAINT FK_DBCH_INST_FRAG FOREIGN KEY (FRAGMENT_ID)
	REFERENCES DBCH_FRAGMENT (ID)
;


ALTER TABLE DBCH_USERGROUP
	ADD CONSTRAINT FK_DBCH_UG_G FOREIGN KEY (GROUP_ID)
	REFERENCES DBCH_GROUP (ID)
;


ALTER TABLE DBCH_FRAGMENT
	ADD CONSTRAINT FK_DBCH_FRAG_G FOREIGN KEY (GROUP_ID)
	REFERENCES DBCH_GROUP (ID)
;


ALTER TABLE DBCH_USERGROUP
	ADD CONSTRAINT FK_DBCH_UG_U FOREIGN KEY (USER_ID)
	REFERENCES DBCH_USER (ID)
;


ALTER TABLE DBCH_INSTALLATION
	ADD CONSTRAINT FK_DBCH_INST_UG FOREIGN KEY (USERGROUP_ID)
	REFERENCES DBCH_USERGROUP (ID)
;

CREATE OR REPLACE TRIGGER "DBCH_E_sequence_insert"
BEFORE INSERT ON DBCH_ENVIRONMENT
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_ENV_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_INST_sequence_insert"
BEFORE INSERT ON DBCH_INSTALLATION
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_INST_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_FRAG_sequence_insert"
BEFORE INSERT ON DBCH_FRAGMENT
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_FRAG_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_REQ_sequence_insert"
BEFORE INSERT ON DBCH_REQUIREMENT
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_REQ_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_DBCH_sequence_insert"
BEFORE INSERT ON DBCH_DBCHANGE
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_DBCH_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_UG_sequence_insert"
BEFORE INSERT ON DBCH_USERGROUP
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_UG_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_G_sequence_insert"
BEFORE INSERT ON DBCH_GROUP
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_G_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/

CREATE OR REPLACE TRIGGER "DBCH_USER_sequence_insert"
BEFORE INSERT ON DBCH_USER
FOR EACH ROW
WHEN (new.ID IS NULL)
  BEGIN
    SELECT DBCH_USER_SEQ.NEXTVAL INTO :new.ID FROM dual;
  END;
/



